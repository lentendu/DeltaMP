# 
# DeltaMP, a flexible, reproducible and resource efficient metabarcoding amplicon pipeline for HPC
# Copyright (C) 2018 Guillaume Lentendu, Christina Wei√übecker, Anna Heintz-Buschart, Tesfaye Wubet
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

# load modules
module load DeltaMP/DELTAMP_VERSION

# Define Variables
while read var val; do unset $var ; if [[ $val == "(["* ]]; then declare -A $var="`echo $val | sed 's/].\"/]=\"/g'`" ; else declare $var="$val" ; fi ; done < config/env.txt
. $BIN/check_previous_step
if [ $EXT == "bz2" ]; then COMP="bzip2 -1 -c" ; else COMP="pigz -p 1 -c -b 1024" ; fi

# Library to analyse
read SAMP_NAME FWD_LIB RVS_LIB <<<`sed -n ${ARRAY_TASK}'p' config/lib3.list`
if [ ! -z "$(grep $SAMP_NAME config/*.missing 2> /dev/null)" ]
then
	echo -e "The sample $SAMP_NAME had no read at the end of the step $(grep -H $SAMP_NAME config/*.missing | sed 's@.*/@@;s@\.missing.*@@').\nSkip"
	(. $BIN/list_step_files.sh)
	echo END
	exit 0
fi
LIB_NAME=$(echo $FWD_LIB $RVS_LIB | sed 's/\(.*\)[^ ]* \1.*$/\1/')
if [ $TRUNCLEN != "no" ]
then
	FWD_LIB=${FWD_LIB}.trunc
	RVS_LIB=${RVS_LIB}.trunc
fi
cd libraries

# Process both direction separately
for i in ${FWD_NAME} ${RVS_NAME}
do
	if [ $i == "$FWD_NAME" ] ; then j=${RVS_NAME} ; else j=${FWD_NAME} ; fi
	if [ -f fastq/$i.${FWD_LIB}.fastq.$EXT ]
	then
		# Pair end
		if [ $PALG == "vsearch" ]
		then
			ASCII=$(vsearch --fastq_chars fastq/$i.$FWD_LIB.fastq.$EXT 2>&1 | grep -m 1 "^Guess" | sed 's/.* //')
			PCTTRESH=$(awk -v P=$PTRESH 'BEGIN{print (1-P)*100}')
			vsearch --quiet --threads 1 --fastq_mergepairs fastq/$i.${FWD_LIB}.fastq.$EXT --reverse fastq/$j.${RVS_LIB}.fastq.$EXT --fastq_ascii $ASCII --fastq_minovlen $MIN_OV --fastq_maxdiffpct $PCTTRESH --fastq_allowmergestagger --fastqout - 2> fastq/log.pairend.$i.$LIB_NAME.txt | $COMP > fastq/$i.$j.$LIB_NAME.pairend.fastq.$EXT
		else
			pandaseq -f fastq/$i.${FWD_LIB}.fastq.$EXT -r fastq/$j.${RVS_LIB}.fastq.$EXT -g fastq/log.pairend.$i.$LIB_NAME.txt -F -A $PALG -o $MIN_OV -O $((MAXLEN+MIN_OV-MINLEN)) -t $PTRESH -T 1 | $COMP > fastq/$i.$j.$LIB_NAME.pairend.fastq.$EXT
		fi
		if [ ! -z "$(eval $DECOMP fastq/$i.$j.$LIB_NAME.pairend.fastq.$EXT | head -c 1)" ]
		then
			sed -n '/OVERLAPS/p' fastq/log.pairend.$i.$LIB_NAME.txt | cut -f 4- | paste -d " " <(echo $LIB_NAME) - > raw_stat/$i.$j.$LIB_NAME.overlap.txt
		fi
		vsearch --quiet --fastq_stats fastq/$i.$j.$LIB_NAME.pairend.fastq.$EXT --log fastq/$i.$j.${LIB_NAME}.pairend.stats
		sed -n '/^Read length distribution/,/^$/{s/>=//;p}' fastq/$i.$j.${LIB_NAME}.pairend.stats | awk '$3~"%"{print $1,$2}' | sort -k1,1n > raw_stat/$i.$j.$LIB_NAME.pairend.length
		sed -n '/^Q score distribution/,/^$/p' fastq/$i.$j.${LIB_NAME}.pairend.stats | awk '$5~"%"{print $2,$4}' | sort -k 1,1 | join -a 1 -o 0,2.2 -e "0" <(seq 0 41 | sort -k 1,1) - | sort -k 1,1n | cut -d " " -f 2 > raw_stat/$i.$j.${LIB_NAME}.pairend.meanqual
		sed -n '/RatePct/,/^$/p' fastq/$i.$j.${LIB_NAME}.pairend.stats | sed '1,2d;$d' | awk '{print $3}' > raw_stat/$i.$j.${LIB_NAME}.pairend.meanposqual
		rm fastq/$i.$j.${LIB_NAME}.pairend.stats
	fi
done

# check for no read
if [ ! -f fastq/${FWD_NAME}.${RVS_NAME}.$LIB_NAME.pairend.fastq.$EXT ] && [ ! -f fastq/${RVS_NAME}.${FWD_NAME}.$LIB_NAME.pairend.fastq.$EXT ]
then
	MY_TMP_NAME=`echo $JOBNAME | sed "s/$DELTAMP_VER\.//;s/\.$SUBPROJECT//"`
	echo $SAMP_NAME >> $EXEC/config/${MY_TMP_NAME}.missing
fi

# list files and directories
(. $BIN/list_step_files.sh)

echo END
