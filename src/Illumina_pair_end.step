# 
# DeltaMP, a flexible, reproducible and resource efficient metabarcoding amplicon pipeline for HPC
# Copyright (C) 2018 Guillaume Lentendu, Christina Wei√übecker, Anna Heintz-Buschart, Tesfaye Wubet
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

# load modules
module load DeltaMP/DELTAMP_VERSION

# Define Variables
while read var val; do unset $var ; if [[ $val == "(["* ]]; then declare -A $var="`echo $val | sed 's/].\"/]=\"/g'`" ; else declare $var="$val" ; fi ; done < config/env.txt
. $BIN/check_previous_step

# Library to analyse
read SAMP_NAME FWD_LIB RVS_LIB <<<`sed -n ${ARRAY_TASK}'p' config/lib3.list`
LIB_NAME=$(echo $FWD_LIB $RVS_LIB | sed 's/\(.*\)[^ ]* \1.*$/\1/')
cd libraries

# Pair end
if [ $PALG == "vsearch" ]
then
	ASCII=$(vsearch --fastq_chars fastq/$LIB_NAME.fwd.fastq.bz2 2>&1 | grep -m 1 "^Guess" | sed 's/.* //')
	PCTTRESH=$(awk -v P=$PTRESH 'BEGIN{print (1-P)*100}')
	vsearch --quiet --threads 1 --fastq_mergepairs fastq/$LIB_NAME.fwd.fastq.bz2 --reverse fastq/$LIB_NAME.rvs.fastq.bz2 --fastq_ascii $ASCII --fastq_minovlen $MIN_OV --fastq_maxdiffpct $PCTTRESH --fastq_allowmergestagger --fastqout - 2> fastq/log.pairend.$LIB_NAME.txt | bzip2 -c > fastq/$LIB_NAME.pairend.fastq.bz2
else
	pandaseq -f fastq/$LIB_NAME.fwd.fastq.bz2 -r fastq/$LIB_NAME.rvs.fastq.bz2 -g fastq/log.pairend.$LIB_NAME.txt -F -A $PALG -o $MIN_OV -t $PTRESH -T 1 -W fastq/$LIB_NAME.pairend.fastq.bz2
fi

# Convert to fasta + qual
mothur "#set.dir(input=$EXEC/libraries/fastq, output=$EXEC/libraries/fasta);
set.logfile(name=mothur.$LIB_NAME.logfile, append=T);
fastq.info(fastq=$LIB_NAME.pairend.fastq)"

# Replace "-" by "_" in sequence identifiers
sed '/>/s/-/_/g' fasta/$LIB_NAME.pairend.fasta > fasta/$LIB_NAME.pairend.tmp && mv fasta/$LIB_NAME.pairend.tmp fasta/$LIB_NAME.pairend.fasta
sed '/>/s/-/_/g' fasta/$LIB_NAME.pairend.qual > fasta/$LIB_NAME.pairend.tmp && mv fasta/$LIB_NAME.pairend.tmp fasta/$LIB_NAME.pairend.qual

# Stat on assembly
if [ $PALG != "vsearch" ]
then
	sed -n '/OVERLAPS/p' fastq/log.pairend.$LIB_NAME.txt | cut -f 4- | paste -d " " <(echo $LIB_NAME) - > raw_stat/$LIB_NAME.overlap.txt
fi
awk '$0!~"^>"{print length($1)}' fasta/$LIB_NAME.pairend.fasta > raw_stat/$LIB_NAME.pairend.length
awk '$0!~"^>"{sum=0;for(i=1;i<=NF;i++){sum+=$i};print int(sum/NF)}' fasta/$LIB_NAME.pairend.qual > raw_stat/$LIB_NAME.pairend.meanqual
awk '$0!~"^>"{for(i=1;i<=NF;i++){sum[i]+=$i;nb[i]+=1}}END{for(i=1;sum[i];i++){print int(sum[i]/nb[i])}}' fasta/$LIB_NAME.pairend.qual > raw_stat/$LIB_NAME.pairend.meanposqual

# list files and directories
. $BIN/list_step_files.sh

echo END
