# 
# DeltaMP, a flexible, reproducible and resource efficient metabarcoding amplicon pipeline for HPC
# Copyright (C) 2018 Guillaume Lentendu, Christina Wei√übecker, Anna Heintz-Buschart, Tesfaye Wubet
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

# Define Variables
while read var val; do unset $var ; if [[ $val == "(["* ]]; then declare -A $var="`echo $val | sed 's/].\"/]=\"/g'`" ; else declare $var="$val" ; fi ; done < config/env.txt
. $BIN/check_previous_step

# load modules
module load DeltaMP/${VERSION[DELTAMP]}

# Raw and pair end stat
	# Length and quality
cd libraries/raw_stat
for i in pairend.length fwd.meanqual rvs.meanqual pairend.meanqual
do
	read min max <<< `cat *.$i | awk 'NR==1{MIN=$1;MAX=$1} ; {if($1<MIN){MIN=$1};if($1>MAX){MAX=$1}} END {print MIN,MAX}'`
	while read lib fs ra
	do
		sort $lib.$i | uniq -c | sort -k 2,2 | join -1 2 -a 2 -o 0,1.1 -e "0" - <(seq $min $max | sort) | sort -k 1,1n | cut -d " " -f 2 | cat <(echo $lib) - | tr "\n" "\t" | sed 's/\t$/\n/'
	done < ../../config/lib2.list | transpose_tab | paste <(cat <(echo $i) <(seq $min $max)) - > $i.stat
	rm *.$i
done

	# meanposqual
for i in fwd rvs pairend
do
	max_length=`for j in *.$i.meanposqual; do sed -n '$=' $j ; done | awk 'NR==1{M=$1} ; {if($1>M){M==$1}}END{print M}'`
	
	while read lib fs ra
	do
		cat <(echo $lib) $lib.$i.meanposqual | tr "\n" " " | sed 's/$/\n/'
	done < ../../config/lib2.list | awk -v M=$max_length '{printf "%s",$1;for(i=2;i<=M+1;i++){if($i!=""){printf " %s", $i} else printf " NA"};printf "\n"}' | transpose > $i.meanposqual.stat
	rm *.$i.meanposqual
done

	# Overlap
max_over=`awk 'NR==1{M=NF} ; {if(NF>M){M=NF}}END{print M}' overlap.txt`
awk -v M=$max_over '{printf "%s",$1;for(i=2;i<=M;i++){if($i!=""){printf " %s", $i} else printf " 0"};printf "\n"}' overlap.txt | transpose > pairend.overlap.stat

# Figures
Rscript --vanilla $BIN/Rscript_raw_stat_figures_Illumina.R $SUBPROJECT $BIN $(echo "DeltaMP_${VERSION[DELTAMP]}")

# list files and directories
. $BIN/list_step_files.sh

echo END
