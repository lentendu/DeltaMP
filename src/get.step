# 
# DeltaMP, a flexible, reproducible and resource efficient metabarcoding amplicon pipeline for HPC
# Copyright (C) 2018 Guillaume Lentendu, Christina Wei√übecker, Anna Heintz-Buschart, Tesfaye Wubet
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

# load modules
module load DeltaMP/DELTAMP_VERSION

# Define Variables
while read var val; do unset $var ; if [[ $val == "(["* ]]; then declare -A $var="`echo $val | sed 's/].\"/]=\"/g'`" ; else declare $var="$val" ; fi ; done < config/env.txt
while read var val; do unset $var ; if [[ $val == "(["* ]]; then declare -A $var="`echo $val | sed 's/].\"/]=\"/g'`" ; else declare $var="$val" ; fi ; done < config/prev.txt
if [ $REF_SUBPROJECT != "no" ]
then
	. $BIN/check_previous_step
fi

# Set archives/libraries array
if [ -z "$ARCHIVES" ] || [[ "${ARCHIVES[@]}" == "no" ]]
then
	if [ $TECH == "454" ]
	then
		ARCH=(`cat config/lib1.list`)
	elif [ $TECH == "Illumina" ]
	then
		ARCH=(`paste <(awk '{print $1$2}' config/lib1.list) <(awk '{print $1$3}' config/lib1.list)`)
	fi
else
	ARCH=(${ARCHIVES[@]})
fi

# Copy raw data
cd libraries

if [[ $LIB_DIR == "/"* ]]
then
	parallel -j $NCPUS 'if [ -f {1}/{2} ]; then dd if={1}/{2} of={2} bs=1M ; fi' ::: ${LIB_DIR[@]} ::: ${ARCH[@]}
else
	wget -nv -O $LIB_DIR.txt "http://www.ebi.ac.uk/ena/data/warehouse/filereport?accession=$LIB_DIR&result=read_run&download=text"
	if [ "$(sed -n '$=' $LIB_DIR.txt)" -gt 1 ]
	then
		parallel -j $NCPUS 'wget -nv -O - {} | dd of=$(basename {}) bs=1M' ::: ${ARCH[@]}
		ARCH=($(basename -a ${ARCH[@]}))
	else
		echo "The accession $LIB_DIR was not found at the European Nucleotide Archive (http://www.ebi.ac.uk/ena/data)"
		echo "Aborting"
		exit 100
	fi
fi


# Extract
my_extract() {
	if [[ -f "$@" ]]
	then
		if [[ "$@" != *$RAW_EXT ]]
		then
			mkdir tmp.$@
			case $@ in
				*.tar.bz2) tar xjvf $@ -C tmp.$@ ;;
				*.tar.gz) tar xzvf $@ -C tmp.$@ ;;
				*.bz2) bunzip2 -1 $@ ;;
				*.gz) dd if=$@ ibs=1M | unpigz -p 1 | dd of=${@%.*} obs=1M && rm $@ ;;
				*.tar) tar xf $@ -C tmp.$@ ;;
				*.tbz2) tar xjvf $@ -C tmp.$@ ;;
				*.tgz) tar xzvf $@ -C tmp.$@ ;;
				*.zip) unzip -j $@ ;;
				#*.7z) 7za e -o./tmp.$@ $@ && rm $@;;
				*) echo "ERROR: '$@' cannot be extracted, unknown extension" && exit 100 ;;
			esac
			find ./tmp.$@ -type f -exec mv -i {} . \;
			rm -r ./tmp.$@
		fi
	else
		echo "ERROR: '$@' does not exist or is not a file" && exit 100
	fi
}
export -f my_extract
export RAW_EXT
parallel -j $NCPUS my_extract ::: ${ARCH[@]}

if [[ "${ARCHIVES[@]}" != "no" ]]
then
my_extract2() {
	case $@ in
		*.bz2) bunzip2 $@ ;;
		*.gz) dd if=$@ ibs=1M | unpigz -p 1 | dd of=${1%.*} obs=1M && rm $@ ;;
		*.tar) tar xf $@ ;;
		*.zip) unzip $@ ;;
	esac
}
	export -f my_extract2
	awk '{print $1$2"\n"$1$3}' ../config/lib1.list | parallel -j $NCPUS my_extract2
fi

# Oligo files
mkdir $RAW_EXT raw_stat fasta
cat <(echo "forward $FWD") <(echo "reverse $RVS") > fasta/oligos.$FWD_NAME.$RVS_NAME

while read lib fwd rvs
do
	if [[ $LIB_DIR == "/"* ]]
	then
		j=${lib/.$RAW_EXT*/}
	else
		j=`echo ${lib##*/} | sed 's/\.'$RAW_EXT'.*//'`
	fi
	if [ $TECH == "454" ]
	then
		awk -v I=$lib 'BEGIN{OFS="\t"}$3==I{print "barcode",$1,$2}' $EXEC/config/barcodes.txt | cat fasta/oligos.$FWD_NAME.$RVS_NAME - | sed 's/reverse/#reverse/;s/-/_/g' > fasta/oligos.${j//-/_}
	elif [ $TECH == "Illumina" ]
	then
		awk -v I=$(echo "$lib$fwd") '$3==I{print ">"$2"\n^"$1}' $EXEC/config/barcodes.txt > fasta/oligos.${j//-/_}
	fi
done < $EXEC/config/lib1.list

# Replace "-" by "_" in library names
for i in *.$RAW_EXT
do
	if [[ $i =~ - ]]
	then
		mv $i ${i//-/_}
	fi
done

# list files and directories
. $BIN/list_step_files.sh

echo END
