# 
# DeltaMP, a flexible, reproducible and resource efficient metabarcoding amplicon pipeline for HPC
# Copyright (C) 2018 Guillaume Lentendu, Christina Wei√übecker, Anna Heintz-Buschart, Tesfaye Wubet
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

# Define Variables
while read var val; do unset $var ; if [[ $val == "(["* ]]; then declare -A $var="`echo $val | sed 's/].\"/]=\"/g'`" ; else declare $var="$val" ; fi ; done < config/env.txt
. $BIN/check_previous_step

# load modules
module load DeltaMP/${VERSION[DELTAMP]}

# Library to analyse
LIB_CHUNK=(`sed -n $ARRAY_TASK,$(($ARRAY_TASK+9))p config/lib3.list | cut -d " " -f 2`)
cd libraries

for LIB_NAME in "${LIB_CHUNK[@]}"
do
	sleep 1
	(
	# sff to fasta + qual
	if [ $DEMULTI == "yes" ]
	then
		mothur "#set.dir(input=$EXEC/libraries, output=$EXEC/libraries/fasta);
		sffinfo(sff=$LIB_NAME.sff)"
	else
		mothur "#set.dir(input=$EXEC/libraries/sff, output=$EXEC/libraries/fasta);
		sffinfo(sff=$LIB_NAME.sff)"
	fi
	
	# Stat for figures
	cd fasta
	twofasta $LIB_NAME.fasta | grep -v "^>" | awk '{print length($1)}' > ../raw_stat/$LIB_NAME.length
	twofasta $LIB_NAME.qual | grep -v "^>" | awk '{sum=0;for(i=1;i<=NF;i++){sum+=$i};print sum/NF}' > ../raw_stat/$LIB_NAME.meanqual
	twofasta $LIB_NAME.qual | grep -v "^>" | awk '{for(i=1;i<=NF;i++){sum[i]+=$i;nb[i]+=1}}END{for(i=1;sum[i];i++){printf "%s\t",sum[i]/nb[i]}}' | sed 's/\t$/\n/' > ../raw_stat/$LIB_NAME.meanposqual
	) &
done
wait

# list files and directories
. $BIN/list_step_files.sh

echo END
